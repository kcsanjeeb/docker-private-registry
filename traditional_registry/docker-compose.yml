version: '3.8'

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    hostname: minio
    restart: always
    networks:
      registry-network:
        ipv4_address: 10.88.0.2
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_DOMAIN: minio.local
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  createbucket:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        # Wait for MinIO
        while ! nc -z minio 9000; do sleep 2; done

        # Configure alias
        mc alias set local http://minio:9000 minio minio123 || exit 1

        # Create bucket
        mc mb local/docker-registry || true
        mc anonymous set download local/docker-registry || true

        # Verify
        mc ls local/docker-registry || exit 1
      "
    networks:
      - registry-network

  registry:
    image: registry:2
    container_name: registry
    restart: always
    depends_on:
      minio:
        condition: service_healthy
    environment:
      # REGISTRY_STORAGE: s3
      # REGISTRY_STORAGE_S3_ACCESSKEY: minio
      # REGISTRY_STORAGE_S3_SECRETKEY: minio123
      # REGISTRY_STORAGE_S3_BUCKET: docker-registry
      # REGISTRY_STORAGE_S3_REGION: us-east-1
      # REGISTRY_STORAGE_S3_REGIONENDPOINT: http://minio:9000
      # REGISTRY_STORAGE_S3_ENDPOINT: http://minio:9000
      # REGISTRY_STORAGE_S3_SECURE: "false"
      # REGISTRY_STORAGE_S3_FORCEPATHSTYLE: "true"
      # REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR: inmemory
      # REGISTRY_HTTP_SECRET: "supersecret"
      # REGISTRY_HTTP_ADDR: :5000
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      # REGISTRY_STORAGE_S3_REGIONENDPOINT: http://10.88.0.2:9000 
    networks:
      registry-network:
        aliases:
          - registry.local
    dns:
      - 127.0.0.11  # Docker's internal DNS
      - 8.8.8.8
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:5000/v2/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  lb:
    image: nginx:alpine
    container_name: lb
    restart: always
    depends_on:
      - registry
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      registry-network:
        aliases:
          - lb.local
    dns:
      - 127.0.0.11  # Docker's internal DNS
      - 8.8.8.8

networks:
  registry-network:
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 10.88.0.0/24
